<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">


    <bean id="accountservice" class="com.itheima.service.impl.AccountServiceImpl">


    </bean>

    <!--spring基于aop的配置
     1.把通知的bean交给spring来管理
     2.使用aop:config标签表明开始aop的配置
     3.使用aop:aspect标签表面开始切面的配置
           id属性:是给切面提供一个唯一标识
           ref属性:是指定通知类bean的id
     4.在aop:aspect标签的内部使用对应标签来配置通知的类型
      aop:before标签: 表示配置前置通知
      method属性: 用于指定Logger类中哪个方法是前置通知
      poincut属性: 用于指定切入点表达式,该表达式的含义指的是对业务层中哪些3方法进行增强

      切入点表达式的写法:
      关键字: execution(表达式)
      表达式:
      访问修饰符  返回值  包名.包名.类.方法名(参数列表)
      eg:
      public void com.itheima.service.impl.AccountServiceImpl.saveAccount()
     -->
<bean id="logger" class="com.itheima.utils.Logger"/>

    <aop:config>

        <aop:aspect id="logAdvice" ref="logger">
<aop:before method="printLog" pointcut="execution( public void com.itheima.service.impl.AccountServiceImpl.saveAccount())"></aop:before>



        </aop:aspect>

    </aop:config>
</beans>