<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">


    <bean id="accountservice" class="com.itheima.service.impl.AccountServiceImpl">


    </bean>


<bean id="logger" class="com.itheima.utils.Logger"/>

    <aop:config>

        <aop:aspect id="logAdvice" ref="logger">
            <!--切入点表达式 -->
<aop:pointcut id="pt1" expression="execution( public void com.itheima.service.impl.AccountServiceImpl.saveAccount())"/>
<!-- &lt;!&ndash;前置通知 在切入点方法执行前执行 &ndash;&gt;-->
<!--<aop:before method="beforeprintLog" pointcut-ref="pt1"></aop:before>-->
<!--&lt;!&ndash;后置通知 在切入点方法正常执行之后执行 与异常通知只能有一个执行 &ndash;&gt;            -->
<!--<aop:after-returning method="afterReturningprintLog"  pointcut-ref="pt1"></aop:after-returning>-->
<!--&lt;!&ndash;异常通知 在切入点方法产生异常时执行 &ndash;&gt;-->
<!--<aop:after-throwing method="afterThrowingprintLog"  pointcut-ref="pt1"></aop:after-throwing>-->
<!--&lt;!&ndash;最终通知  都会执行 &ndash;&gt;-->
<!--<aop:after method="afrterprintLog"  pointcut-ref="pt1"></aop:after>-->


<aop:around method="aroundprintLog" pointcut-ref="pt1"></aop:around>

        </aop:aspect>

    </aop:config>
</beans>